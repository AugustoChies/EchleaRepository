 public GameObject mychar,instanced;
    [SyncVar]
    private GameObject objectID;
    public bool started;
    [SyncVar]
    public GameObject inventory;
    GameObject actualrope;
    public GameObject canvas, spawnpoint;

    //coisas do char select
    public GameObject selectcanvas,selectcontroller;
    public bool didIClick;

    // Use this for initialization
    void Start () {
        started = false;
	}
	
	// Update is called once per frame
	void Update () {
		if(!started)
        {
            if (isLocalPlayer)
            {
                started = true;
                if (SceneManager.GetActiveScene().name == "Stage1")
                { 
                    if(mychar.name == "Explorer")
                    {
                        spawnpoint = GameObject.Find("SpawnExplorer");
                    }
                    else if (mychar.name == "Bird")
                    {
                        spawnpoint = GameObject.Find("SpawnBird");
                    }
                    Debug.Log("spawned");
                    CmdSpawnPlayer(mychar,spawnpoint);
                }
            }
        }
        if (started)
        {
            if(SceneManager.GetActiveScene().name == "CharacterSelect")
            {
                if (selectcanvas == null)
                    selectcanvas = GameObject.Find("SCanvas");
                if (selectcontroller == null)
                    selectcontroller = GameObject.Find("ChangeController");
                if(selectcontroller.GetComponent<SwapNetwork>().mypobject == null)
                {
                    selectcontroller.GetComponent<SwapNetwork>().mypobject = this.gameObject;
                }

                if(selectcontroller.GetComponent<SwapNetwork>().clicked && didIClick)
                {
                    selectcanvas.GetComponent<MenuPlayScript>().ShowWait();
                }
            }
            if (SceneManager.GetActiveScene().name == "Stage1")
            {
                if (this.transform.childCount > 1)
                {
                    if (transform.Find("Bird(Clone)"))
                    {
                        Transform shine = transform.Find("Bird(Clone)");
                        Destroy(shine.gameObject);
                    }
                    if (transform.Find("Explorer(Clone)"))
                    {
                        Transform shine = transform.Find("Explorer(Clone)");
                        Destroy(shine.gameObject);
                    }
                }
                if (canvas == null)
                    canvas = GameObject.Find("Statistics");

                if (instanced == null)
                {
                    if (mychar.name == "Explorer")
                    {
                        instanced = GameObject.Find("Explorer(Clone)");
                        // instanced.transform.SetParent(this.transform);
                    }
                    else if (mychar.name == "Bird")
                    {
                        instanced = GameObject.Find("Bird(Clone)");
                        // instanced.transform.SetParent(this.transform);
                    }
                }

            }
        }
    }

    public bool AmIServer()
    {
        return isServer;
    }

    public bool AmILocal()
    {
        return isLocalPlayer;
    }

    public int ReturnKeys()
    {
        return canvas.GetComponent<CanvasScript>().keys;
    }

    [ClientRpc]
    void RpcUpdateSpawned(GameObject inst,GameObject parent)
    {
        instanced = inst;
        inst.transform.SetParent(parent.transform);
    }


    [Command]
    void CmdSpawnPlayer(GameObject mc,GameObject spawn)
    {
        instanced = GameObject.Instantiate(mc, this.gameObject.transform.position, Quaternion.identity);
        instanced.transform.parent = this.transform;
        NetworkServer.SpawnWithClientAuthority(instanced, this.gameObject);
        RpcUpdateSpawned(instanced, this.gameObject);
    }